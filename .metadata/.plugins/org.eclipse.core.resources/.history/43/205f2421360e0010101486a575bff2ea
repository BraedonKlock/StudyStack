package StudyStack;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.*;

/*
 * This class handles menu design and the user interaction.
 */

public class Interface {

	public static void main(String[] args) throws Exception {
        courseMenu();
	}
	
	static Scanner scanner = new Scanner(System.in);
	
	 public class ConsoleColors {
	        public static final String RESET = "\u001B[0m";
	        public static final String BLACK = "\u001B[30m";
	        public static final String RED = "\u001B[31m";
	        public static final String GREEN = "\u001B[32m";
	        public static final String YELLOW = "\u001B[33m";
	        public static final String BLUE = "\u001B[34m";
	        public static final String PURPLE = "\u001B[35m";
	        public static final String CYAN = "\u001B[36m";
	        public static final String WHITE = "\u001B[37m";
	    }
	 

	 public static void DateTime() {
	         LocalDateTime now = LocalDateTime.now(); // Get current date and time

	         // Format the date and time
	         DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd|HH:mm:ss");

	         String formattedDateTime = now.format(formatter);
	         System.out.printf("%-3s %s","",formattedDateTime+"\n");
	     }

	 
	// Logo
	public static void printLogo() {
	    System.out.println(ConsoleColors.GREEN + "  _____ _           _         _____ _             _   __  ");
	    System.out.println(						 " / ____| |         | |       / ____| |           | | / /   ");
	    System.out.println(						 "| (__ _| |_   _  __| |__  __| (__ _| |_ __ _ ____| |/_/  ");
	    System.out.println(						 " \\___|_| |_| | |/ _` | | / / \\___|_| |_/ _` |  __| '_  \\ ");
	    System.out.println(						 " ____) | | |_| | (_| | |/ /  ____) | || (_| | |__| |_| |");
	    System.out.println(						 "|_____/|_|\\__,_|\\__,_|\\/ /  |_____/|_| \\__,_|____|_| |_|");
	    System.out.println(						 "                      /_/                                 ");
	    System.out.println(						 "                                                       ");
	    System.out.println(						 "                     StudyStack                        " + ConsoleColors.RESET);
	    System.out.println();
	}
	
	// menu design.
	public static void courseShowMenu() {
		System.out.println("|=========================|\n" + 
				  		   "|------- Main Menu -------|\n" +
				  		   "|=========================|\n" +
				  		   "1. Add course\n" +
				  		   "2. Edit course\n" +
				  		   "3. Delete course\n" +
				  		   "4. Search course\n" +
				  		   "5. List all courses\n" +
				  		   "6. Exit\n" +
				  		   "Choose an option (enter #): ");
	}
	
	// menu interface
	public static void courseMenu() throws Exception {
		int option = 0;
		
		do {
			try {
				CourseList.loadFromFile();
			printLogo();
			DateTime();
			courseShowMenu();
			option = Integer.parseInt(scanner.nextLine().trim());
			switch (option) {
			case 1: try {
					CourseList.addCourse();
					} catch (StudyStackException e){
						System.out.println(e.getMessage());
					}
					break;
					
			case 2: try {
					CourseList.editCourse();
					} catch (StudyStackException e){
					System.out.println(e.getMessage());
					}
					break;
					
			case 3: try {
					CourseList.deleteCourse();
					} catch (StudyStackException e){
					System.out.println(e.getMessage());
					}
					break;
					
			case 4:try {
					CourseList.searchCourse();
					} catch (StudyStackException e){
						System.out.println(e.getMessage());
					}
					break;
					
			case 5: try {
					CourseList.listCourses();
					} catch (StudyStackException e){
						System.out.println(e.getMessage());
					}
					break;
			case 6: try {
					ScheduleInterface.Menu();
					} catch (StudyStackException e){
					System.out.println(e.getMessage());
					}
					break;
					
			case 7: exit();
					break;
					
			default: System.out.println("\n*Not a valid option*\n");
			}
			} catch(NumberFormatException e) {
				System.out.println("\n*Invalid option! try again*\n");
			}
			option = 0;
		} while (option != 7);
	}
	
	// exit method
	public static void exit() {
		System.out.println("\n*Exiting*\n");
		System.exit(0);
	}
}